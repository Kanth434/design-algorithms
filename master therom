import math

def master_theorem(a, b, k):
 if a < 1 or b <= 1:
        raise ValueError("Invalid values for a and b. They must satisfy a >= 1 and b > 1.")
 log_b_a = math.log(a, b)
  if log_b_a > k:
        return f"T(n) = Theta(n^{log_b_a})"
    elif log_b_a == k:
        return f"T(n) = Theta(n^{k} * log^k n)"
    else:
        return f"T(n) = Theta(n^{k})"
        # Example usage
print(master_theorem(2, 2, 1))
print(master_theorem(3, 2, 1))
print(master_theorem(4, 2, 2))
T(n) = Theta(n)
T(n) = Theta(n^1 * log^1 n)
T(n) = Theta(n^2)
